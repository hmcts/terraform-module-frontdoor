jobs:
  - job: Plan
    pool:
      vmImage: ${{ parameters.agentPool }}
    steps:
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: ${{ parameters.terraformVersion }}
      - task: TerraformCLI@0
        displayName: Init - ${{ parameters.environment }} 
        inputs:
          command: 'init'
          commandOptions: '-lock=false' # don't lock on PRs / validate phase
          backendType: 'azurerm'
          backendServiceArm: '${{ parameters.service_connection }}'
          backendAzureRmResourceGroupName: '${{ parameters.storage_account_rg }}'
          backendAzureRmStorageAccountName: '${{ parameters.storage_account_name }}'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: '${{ parameters.component }}.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/validation'
      - task: TerraformCLI@0
        displayName: Plan - ${{ parameters.environment }}
        inputs:
          command: 'plan'
          commandOptions: '-out=${{ parameters.environment }}${{ parameters.build }}plan -var-file=$(System.DefaultWorkingDirectory)/validation/sample.tfvars'
          workingDirectory: '$(System.DefaultWorkingDirectory)/validation'
          environmentServiceName: '${{ parameters.service_connection }}'
      - task: Bash@3
        displayName: "Remove local tfstate"
        inputs:
          targetType: 'inline'
          workingDirectory: '$(System.DefaultWorkingDirectory)/validation'
          script: |
            rm -f terraform.tfstate* && rm -rf .terraform/
